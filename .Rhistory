wine = read.csv("http://www.nd.edu/~mclark19/learn/data/goodwine.csv")
summary(wine)
library(doSNOW)
registerDoSNOW(makeCluster(3, type = "SOCK"))
library(corrplot)
corrplot(cor(wine[, -c(13, 15)]), method = "number", tl.cex = 0.5)
library(caret)
set.seed(1234)
trainIndices = createDataPartition(wine$good, p = 0.8, list = F)
wanted = !colnames(wine) %in% c("free.sulfur.dioxide", "density", "quality", "color", "white")
wine.train = wine[trainIndices, wanted]
wine.test = wine[-trainIndices, wanted]
winte.trainplot = predict(preProcess(wine.train[,-10], method = "range"), wine.train[,-10])
featurePlot(winte.trainplot, wine.train$good, "box")
set.seed(1234)
cv_opts = trainControl(method="cv", number=10)
knn_opts = data.frame(.k=c(seq(3, 11, 2), 25, 51, 101))
library(e1071)
results.knn = train(good~., data=wine.train, method="knn", preProcess="range", trControl = cv_opts, tuneGrid = knn_opts)
results.knn
preds_knn = predict(results.knn, wine.test[,-10])
confusionMatrix(preds_knn, wine_test[,10], positive = 'Good')
dotPlot(varImp(results.knn))
results_nnet = train(good~., data=wine.train, method = "nnet", trControl = cv_opts, preProcess="range", tuneLength=3, trace=F, maxit=1000)
results_nnet
